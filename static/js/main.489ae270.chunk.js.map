{"version":3,"sources":["utils.js","components/images.jsx","App.js","index.js"],"names":["console","log","process","unsplash","Unsplash","accessKey","Images","useState","image","setImage","images","setImages","query","setQuery","a","fetchImagesKeyword","fetchRandomImage","search","photos","res","json","data","results","error","getRandomPhoto","Container","Row","Col","Form","Group","controlId","Label","Control","type","ref","node","placeholder","Button","variant","onClick","fetchImage","value","className","urls","Figure","Image","src","small","map","i","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uYAEAA,QAAQC,IAAIC,kRACZ,IACeC,EADE,IAAIC,IAAS,CAAEC,UAAWH,gDCyE5BI,EAvEA,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAESF,mBAAS,IAFlB,mBAEZG,EAFY,KAEJC,EAFI,OAGOJ,mBAAS,IAHhB,mBAGZK,EAHY,KAGLC,EAHK,iDAKnB,WAA0BD,GAA1B,SAAAE,EAAA,0DACQF,EADR,gCAEUG,EAAmBH,GAF7B,6CAIUI,IAJV,OAMEH,EAAS,IANX,4CALmB,+BAcJE,EAdI,8EAcnB,WAAkCH,GAAlC,iBAAAE,EAAA,6DACEL,EAAS,IADX,kBAGsBN,EAASc,OAAOC,OAAON,GAH7C,cAGUO,EAHV,gBAIuBA,EAAIC,OAJ3B,OAIUC,EAJV,OAKIV,EAAUU,EAAKC,SALnB,kDAOItB,QAAQuB,MAAR,MAPJ,2DAdmB,+BAyBJP,IAzBI,2EAyBnB,8BAAAF,EAAA,6DACEL,EAAS,IADX,kBAGsBN,EAASe,OAAOM,iBAHtC,cAGUL,EAHV,gBAIuBA,EAAIC,OAJ3B,OAIUC,EAJV,OAKIZ,EAASY,GALb,kDAOIrB,QAAQuB,MAAR,MAPJ,2DAzBmB,sBAoCnB,OACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,MAAN,KACE,kDACA,mFAEF,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,IAAK,SAAAC,GAAUtB,EAASsB,IAASC,YAAY,iBAEzE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAASM,QAAS,kBAhDxC,2CAgD8CC,CAAW5B,EAAM6B,SAAxE,UAEU,OAIhB,kBAACf,EAAA,EAAD,CAAKgB,UAAU,kCACVlC,EAAMmC,KACP,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAOC,MAAR,CAAcC,IAAKtC,EAAMmC,KAAKI,SAGhCrC,EAAOsC,KAAI,SAACxC,EAAOyC,GAAR,OACT,kBAACL,EAAA,EAAD,CAASM,IAAKD,EAAGP,UAAU,OACzB,kBAACE,EAAA,EAAOC,MAAR,CAAcC,IAAKtC,EAAMmC,KAAKI,eCtD7BI,MARf,WACE,OACE,yBAAKT,UAAU,OACX,kBAAC,EAAD,QCFRU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.489ae270.chunk.js","sourcesContent":["import Unsplash from 'unsplash-js';\n\nconsole.log(process.env)\nconst unsplash = new Unsplash({ accessKey: process.env.REACT_APP_UNSPLASH_KEY});\nexport default unsplash;","import React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col, Figure } from 'react-bootstrap';\n\nimport unsplash from '../utils';\n\nconst Images = () => {\n  const [image, setImage] = useState({});\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n\n  async function fetchImage(query) {\n    if (!!query) {\n      await fetchImagesKeyword(query);\n    } else {\n      await fetchRandomImage();\n    }\n    setQuery('');\n  }\n\n  async function fetchImagesKeyword(query) {\n    setImage({});\n    try {\n      const res = await unsplash.search.photos(query);\n      const data = await res.json();\n      setImages(data.results);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async function fetchRandomImage() {\n    setImage({});\n    try {\n      const res = await unsplash.photos.getRandomPhoto();\n      const data = await res.json();\n      setImage(data);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>\n                <h2>Search for images!</h2>\n                <p>(leave the form blank if you want a random search!)</p>\n              </Form.Label>\n              <Form.Control type=\"text\" ref={node => { setQuery(node) }} placeholder=\"e.g animals\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"button\" onClick={() => fetchImage(query.value)}>\n              Search\n            </Button>{' '}\n          </Form>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center py-5\">\n        {!!image.urls ?\n          <Figure>\n            <Figure.Image src={image.urls.small}/>\n          </Figure>\n        :\n          images.map((image, i) => (\n            <Figure  key={i} className=\"m-2\">\n              <Figure.Image src={image.urls.small} />\n            </Figure>\n          ))\n        }\n      </Row>\n    </Container>\n  );\n}\n\nexport default Images;\n","import React from 'react';\nimport './styles/index.css';\n\nimport Images from './components/images';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Images/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}